{"total":11,"pageSize":12,"pageCount":1,"data":[{"title":"win向mac环境迁移","uid":"efa091f902e958fe5c4762b87ffa7084","slug":"win向mac环境迁移","date":"2021-10-02T16:22:33.000Z","updated":"2022-01-18T06:32:30.275Z","comments":true,"path":"api/articles/win向mac环境迁移.json","cover":[],"text":"win 切换到 mac 的环境迁移买不起 mac，在同学的怂恿下装了黑 mac，前前后后折腾了两三天，总算稳定下来，能开始干活了。 mac 的开发体验确实很舒服，类 linux 的 shell 命令，各种好用的安装工具、终端工具等等。这篇文章主要是记录一下从 win 过渡到 ma...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[],"tags":[],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}},"feature":true},{"title":"js的原型和原型链","uid":"b03e4cdb5d07f78c93b33b2ac1a9cdbd","slug":"js的原型和原型链","date":"2021-09-28T14:31:40.000Z","updated":"2022-01-12T10:47:04.245Z","comments":true,"path":"api/articles/js的原型和原型链.json","cover":[],"text":"原型和原型链javascript 实现面向对象的方式很独特，不同于其他语言，es5 之前的实现采用了原型链的方式，虽然 es6 之后的 class 语法已经很接近传统语言的面向对象，但本质上还是原型链的语法糖，还是有必要了解原型链实现面向对象的设计模式。 prototype和__...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[],"tags":[],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}},"feature":true},{"title":"User-Agent是什么？怎么获取用户端环境信息？应用场景有哪些？","uid":"9658c73062561165a32c95df5c81dd4f","slug":"user-agent是什么？怎么获取用户端环境信息？","date":"2021-09-28T08:00:53.000Z","updated":"2022-01-12T10:47:04.249Z","comments":true,"path":"api/articles/user-agent是什么？怎么获取用户端环境信息？.json","cover":[],"text":"User-Agent是什么？怎么获取用户端环境信息？应用场景有哪些？前言这篇文章的来源是朋友面试唯品会时的一个场景题目——如何根据用户的手机型号跳转对应链接并唤起对应厂商的应用商店。问题的关键在于获取用户的设备信息，微信小程序提供的wx.getSystemInfo(Object ...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}},"feature":true},{"title":"git工作流程","uid":"e2cb4e89611544cf3c6b12db41ef12fa","slug":"git工作流程","date":"2021-08-07T08:57:12.000Z","updated":"2022-01-12T10:47:04.231Z","comments":true,"path":"api/articles/git工作流程.json","cover":[],"text":"git流程 git clone 克隆远程资源到本地目录，作为工作区 在工作区上修改文件 每次修改前，先切换master主分支，使用git pull拉取远程资源，merge合并到本地开发分支，以更新本地文件 本地修改后，通过git status查看文件状态，使用git add添加文...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"git","slug":"git","count":2,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}},{"title":"webpack5搭建vue3环境","uid":"4671e4a4ddc838dd69dd6aa254700d36","slug":"webpack5搭建vue3环境","date":"2021-08-07T08:52:54.000Z","updated":"2022-01-12T10:47:04.251Z","comments":true,"path":"api/articles/webpack5搭建vue3环境.json","cover":[],"text":"使用webpack5搭建vue3环境前言平时项目开发，从稳定性和易用性的角度，一般很少从头到尾搭建环境，大多数是采用以下的方法： 用官方脚手架vue-cli快速搭建项目 在别人搭建好的项目基础上开发 虽然能快速上手，但不利用项目把控能力的培养。无论是从面试的角度还是从问题排查的角...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"webpack","slug":"webpack","count":1,"path":"api/categories/webpack.json"}],"tags":[{"name":"webpack web前端","slug":"webpack-web前端","count":1,"path":"api/tags/webpack-web前端.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}},{"title":"koa的基本使用","uid":"43e50756c3c9f1fa16f87b82a098213d","slug":"koa基本使用","date":"2021-07-03T12:54:26.000Z","updated":"2022-01-18T06:49:36.252Z","comments":true,"path":"api/articles/koa基本使用.json","cover":[],"text":"koa demo学校期末实践要求做一个管理系统，刚好最近在看 node 后端的东西，就学习一下 koa，了解一下洋葱圈模型的思想和 MVC 架构的应用。 一. 安装 koa毕竟是后端服务，类型检测还是有必要上的，就顺便加上了 typescript。没有从零开始搭建，直接用别人搭建...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"koa","slug":"koa","count":1,"path":"api/categories/koa.json"}],"tags":[{"name":"node","slug":"node","count":3,"path":"api/tags/node.json"},{"name":"koa","slug":"koa","count":1,"path":"api/tags/koa.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}},{"title":"git commit 规范","uid":"15641e944ff08245a19bc3e150705e0f","slug":"git commit 规范","date":"2021-01-09T12:54:26.000Z","updated":"2022-01-18T06:43:35.659Z","comments":true,"path":"api/articles/git commit 规范.json","cover":[],"text":"git commit 规范 Commit Message 格式目前使用最广泛的是Conventional Commits Specification（约定式提交规范），它是基于Angular团队的代码提交规范而产生的。message如下： &lt;类型&gt;[可选的作用域]：&...","link":"","photos":[],"count_time":{"symbolsCount":936,"symbolsTime":"1 mins."},"categories":[{"name":"git","slug":"git","count":2,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}},{"title":"js异步语法","uid":"5fa09e61f4099275ac11d38388630b65","slug":"js异步语法","date":"2021-01-09T12:54:26.000Z","updated":"2022-01-12T10:47:04.244Z","comments":true,"path":"api/articles/js异步语法.json","cover":[],"text":"无论是新人还是老人，无论是学习源码，还是自己开发，我们经常会遇到这样的情况：书写好的几行代码，想要需要知道其输出内容和顺序。而 JavaScrip 作为单线程语言，就有一个很自然而然的结论啦： JavaScript是按照语句出现的顺序执行的 说是这么说，当有那么一天，你的经理丢给...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"javascript","slug":"javascript","count":1,"path":"api/categories/javascript.json"}],"tags":[{"name":"javascript","slug":"javascript","count":1,"path":"api/tags/javascript.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}},{"title":"node应用运行在服务器上","uid":"10c2a3aed0f7bff1bb8a5969f29219a5","slug":"node应用运行在服务器上","date":"2020-12-20T09:23:17.000Z","updated":"2022-01-12T10:47:04.247Z","comments":true,"path":"api/articles/node应用运行在服务器上.json","cover":[],"text":"node 持续运行想要 node 应用持续运行在 Linux 服务器上，不被杀掉进程，要使用 nohub node app.js 命令 每次修改代码，重新打包部署之后，要先 cd 到当前 node 应用目录，使用 lsof -i:3000（3000 是应用运行的端口）找到 PID...","link":"","photos":[],"count_time":{"symbolsCount":371,"symbolsTime":"1 mins."},"categories":[{"name":"node","slug":"node","count":2,"path":"api/categories/node.json"}],"tags":[{"name":"node","slug":"node","count":3,"path":"api/tags/node.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}},{"title":"position：stick的使用","uid":"1e8e36cad758784f663faba95721ebb1","slug":"position：sticky的坑","date":"2020-11-23T07:54:26.000Z","updated":"2022-01-12T10:47:04.248Z","comments":true,"path":"api/articles/position：sticky的坑.json","cover":null,"text":"看这篇文章吧：https://segmentfault.com/a/1190000007183209 ","link":"","photos":[],"count_time":{"symbolsCount":51,"symbolsTime":"1 mins."},"categories":[{"name":"css","slug":"css","count":1,"path":"api/categories/css.json"}],"tags":[{"name":"css","slug":"css","count":1,"path":"api/tags/css.json"},{"name":"web前端","slug":"web前端","count":1,"path":"api/tags/web前端.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}},{"title":"Node.js路由","uid":"2541adcd11744cf7342cd019a5003441","slug":"node.js路由","date":"2020-10-11T07:54:26.000Z","updated":"2022-01-12T10:47:04.247Z","comments":true,"path":"api/articles/node.js路由.json","cover":[],"text":"Node.js 路由路由: Web 服务器根据用户输入的不同 url 返回不同的页面。 例如登录页面 login 和注册页面 register #默认端口都为80 http:&#x2F;&#x2F;localhost:80&#x2F;login http:&#x2F;&#x2F;...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"node","slug":"node","count":2,"path":"api/categories/node.json"}],"tags":[{"name":"node","slug":"node","count":3,"path":"api/tags/node.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}}]}