{"title":"git commit 规范","uid":"15641e944ff08245a19bc3e150705e0f","slug":"git commit 规范","date":"2021-01-09T12:54:26.000Z","updated":"2022-01-18T06:43:35.659Z","comments":true,"path":"api/articles/git commit 规范.json","keywords":null,"cover":[],"content":"<h1 id=\"git-commit-规范\"><a href=\"#git-commit-规范\" class=\"headerlink\" title=\"git commit 规范\"></a>git commit 规范</h1><span id=\"more\"></span>\n<h2 id=\"Commit-Message-格式\"><a href=\"#Commit-Message-格式\" class=\"headerlink\" title=\"Commit Message 格式\"></a>Commit Message 格式</h2><p>目前使用最广泛的是Conventional Commits Specification（约定式提交规范），它是基于Angular团队的代码提交规范而产生的。message如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&lt;类型&gt;[可选的作用域]：&lt;描述&gt;\n\n[可选的正文]\n\n[可选的脚注]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"使用commitizen和cz-conventional-changelog替代git-commit\"><a href=\"#使用commitizen和cz-conventional-changelog替代git-commit\" class=\"headerlink\" title=\"使用commitizen和cz-conventional-changelog替代git commit\"></a>使用commitizen和cz-conventional-changelog替代git commit</h2><p>这两个工具都是node下的包提供的，所以必须先有node环境</p>\n<p>commitizen/cz-cli提供了一个git cz命令，用以替代git commit，从而生成符合规范的commit message. commitizen还必须指定一个adapter，比如cz-conventional-changelog (一个符合 Angular团队规范的 preset). 使得 commitizen 按照我们指定的规范帮助我们生成 commit message.</p>\n<p><code>npm install -g commitizen cz-conventional-changelog</code></p>\n<p>全局安装这两个包，在user那里的.vscode下新建一个.czrc文件，设置全局默认适配器，里面写上</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;path&quot;: &quot;cz-conventional-changelog&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<!--关于适配器，可以根据团队选择不同适配器。（ 如果想根据 commit 信息生成 log，可以使用 [cz-conventional-changelog](https://github.com/commitizen/cz-conventional-changelog) ）-->\n\n<p>这样就可以使用git cz进行commit了</p>\n<p><img src=\"C:\\Users\\coderzfh\\AppData\\Roaming\\Typora\\typora-user-images\\image-20210109200529219.png\" alt=\"image-20210109200529219\"></p>\n<h2 id=\"也可以在本地\"><a href=\"#也可以在本地\" class=\"headerlink\" title=\"也可以在本地\"></a>也可以在本地</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\"># npm install --save-dev commitizen cz-conventional-emoji\n\n# 为本项目单独设置默认适配器\n&quot;config&quot;: &#123;\n    &quot;commitizen&quot;: &#123;\n      &quot;path&quot;: &quot;.&#x2F;node_modules&#x2F;cz-conventional-emoji&quot;\n    &#125;,\n  &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里还使用了 cz-conventional-emoji，可以在commit的时候添加上emoji。</p>\n","text":"git commit 规范 Commit Message 格式目前使用最广泛的是Conventional Commits Specification（约定式提交规范），它是基于Angular团队的代码提交规范而产生的。message如下： &lt;类型&gt;[可选的作用域]：&...","link":"","photos":[],"count_time":{"symbolsCount":936,"symbolsTime":"1 mins."},"categories":[{"name":"git","slug":"git","count":2,"path":"api/categories/git.json"}],"tags":[{"name":"git","slug":"git","count":2,"path":"api/tags/git.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#git-commit-%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">git commit 规范</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Commit-Message-%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">Commit Message 格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8commitizen%E5%92%8Ccz-conventional-changelog%E6%9B%BF%E4%BB%A3git-commit\"><span class=\"toc-text\">使用commitizen和cz-conventional-changelog替代git commit</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B9%9F%E5%8F%AF%E4%BB%A5%E5%9C%A8%E6%9C%AC%E5%9C%B0\"><span class=\"toc-text\">也可以在本地</span></a></li></ol></li></ol>","author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}},"mapped":true,"prev_post":{"title":"koa的基本使用","uid":"43e50756c3c9f1fa16f87b82a098213d","slug":"koa基本使用","date":"2021-07-03T12:54:26.000Z","updated":"2022-01-18T06:49:36.252Z","comments":true,"path":"api/articles/koa基本使用.json","keywords":null,"cover":[],"text":"koa demo学校期末实践要求做一个管理系统，刚好最近在看 node 后端的东西，就学习一下 koa，了解一下洋葱圈模型的思想和 MVC 架构的应用。 一. 安装 koa毕竟是后端服务，类型检测还是有必要上的，就顺便加上了 typescript。没有从零开始搭建，直接用别人搭建...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"koa","slug":"koa","count":1,"path":"api/categories/koa.json"}],"tags":[{"name":"node","slug":"node","count":3,"path":"api/tags/node.json"},{"name":"koa","slug":"koa","count":1,"path":"api/tags/koa.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}},"next_post":{"title":"js异步语法","uid":"5fa09e61f4099275ac11d38388630b65","slug":"js异步语法","date":"2021-01-09T12:54:26.000Z","updated":"2022-01-12T10:47:04.244Z","comments":true,"path":"api/articles/js异步语法.json","keywords":null,"cover":[],"text":"无论是新人还是老人，无论是学习源码，还是自己开发，我们经常会遇到这样的情况：书写好的几行代码，想要需要知道其输出内容和顺序。而 JavaScrip 作为单线程语言，就有一个很自然而然的结论啦： JavaScript是按照语句出现的顺序执行的 说是这么说，当有那么一天，你的经理丢给...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"javascript","slug":"javascript","count":1,"path":"api/categories/javascript.json"}],"tags":[{"name":"javascript","slug":"javascript","count":1,"path":"api/tags/javascript.json"}],"author":{"name":"eve","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}}}}