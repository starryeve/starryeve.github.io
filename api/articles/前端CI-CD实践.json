{"title":"前端CI/CD实践","uid":"1ed68a3a19e8d33a6986f3ce51f04bc8","slug":"前端CI-CD实践","date":"2022-01-20T17:11:50.000Z","updated":"2022-01-20T17:12:13.139Z","comments":true,"path":"api/articles/前端CI-CD实践.json","keywords":null,"cover":null,"content":"<h1 id=\"前端CI-CD实践\"><a href=\"#前端CI-CD实践\" class=\"headerlink\" title=\"前端CI/CD实践\"></a>前端CI/CD实践</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><h3 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h3><h3 id=\"可以干嘛\"><a href=\"#可以干嘛\" class=\"headerlink\" title=\"可以干嘛\"></a>可以干嘛</h3><h2 id=\"CI-CD是什么\"><a href=\"#CI-CD是什么\" class=\"headerlink\" title=\"CI/CD是什么\"></a>CI/CD是什么</h2><p><strong>CI/CD</strong>（Continuous Intergration/Continuous Delpoy），<strong>持续集成/持续部署</strong>，或者<strong>持续集成/持续交付</strong>（Continuous Delivery），是一种在<strong>开发阶段</strong>引入<strong>自动化</strong>来频繁交付应用的方法。从前端的角度看，CICD的流程中涉及：</p>\n<ul>\n<li>CI：代码<strong>push</strong>到托管平台之后的<strong>lint测试</strong>、<strong>单元测试</strong></li>\n<li>CD：将<strong>build</strong>后的项目丢到远端 <strong>Nginx</strong> 的静态资源目录下</li>\n</ul>\n<!--因为我目前的项目都是在本地配好lint规则，做好相关的校验；测试相关的技术暂时还没有过多了解，所以这篇文章暂时不会提到CI的部分，而只是主要介绍下自动化部署的流程。-->\n\n<h3 id=\"构建-部署\"><a href=\"#构建-部署\" class=\"headerlink\" title=\"构建/部署\"></a>构建/部署</h3><p>前后端分离的开发模式中，前端项目经常会使用框架进行开发，经由 <strong>Webpack</strong>（或者其他构建工具） 打包后的SPA应用（代码），本质上都是静态资源，只需要把它们都放到 <strong>Nginx</strong>的静态资源目录下，配好相关的路径，即可完成部署。</p>\n<p>前端项目的构建、部署、上线流程，从 <strong>简陋疏散</strong> 到 <strong>完善严谨</strong> ，大致经历了以下几个阶段：</p>\n<h4 id=\"手动挡\"><a href=\"#手动挡\" class=\"headerlink\" title=\"手动挡\"></a>手动挡</h4><pre class=\"line-numbers language-mermaid\" data-language=\"mermaid\"><code class=\"language-mermaid\"><span class=\"token keyword\">graph</span> LR\n\t本地build项目 <span class=\"token arrow operator\">--></span> sftp上传远程服务器 <span class=\"token arrow operator\">--></span> 配置nginx访问路径<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol>\n<li>本地执行 <code>yarn build</code>构建项目</li>\n<li>使用 <strong>transmit</strong>或其他支持 <strong>sftp</strong>的软件上传打包后的项目</li>\n<li>修改 Nginx 的 <strong>nginx.conf</strong> 文件，配置项目的访问路径</li>\n</ol>\n<p>手动部署操作起来很简单，但缺点也很明显，每次构建完都要人为地进行部署的动作，一方面减少了实际敲代码的时间，另一方面，人工操作免不了会有疏忽出错的时候。</p>\n<h4 id=\"自动挡\"><a href=\"#自动挡\" class=\"headerlink\" title=\"自动挡\"></a>自动挡</h4><p>随着<strong>工程化</strong>的发展和<strong>工具链</strong>的成熟，项目部署不再像以前简单粗暴。前端代码的<strong>健壮性</strong>、<strong>可靠性</strong>越来越被重视，项目发布前往往需要 <strong>代码约束</strong> 和 <strong>代码测试</strong> ，校验通过后服务器拉取最新的代码，进行 build 和 nginx 配置后才算完成整个部署的过程。</p>\n<pre class=\"line-numbers language-mermaid\" data-language=\"mermaid\"><code class=\"language-mermaid\"><span class=\"token keyword\">graph</span> LR<span class=\"token punctuation\">;</span>\n\tlint校验 <span class=\"token arrow operator\">--></span> 单元测试 <span class=\"token arrow operator\">--></span> push远端仓库 <span class=\"token arrow operator\">--></span> 服务器拉取最新代码 <span class=\"token arrow operator\">--></span> build构建项目 <span class=\"token arrow operator\">--></span> 配置nginx <span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol>\n<li>代码扫描 <code>yarn lint</code>检查代码是否规范</li>\n<li><code>yarn unit</code>进行单元测试</li>\n<li><code>git push</code>提交更改到远端仓库</li>\n<li>登录服务器，<code>git pull</code>拉取最新代码</li>\n<li><code>yarn build</code>构建项目</li>\n<li>配置 nginx 访问路径</li>\n</ol>\n<p>这个阶段，我们借助一些工具，能够减少代码不规范或隐藏bug的问题。但所有的操作还是得一行一行命令去敲，项目真正的部署也还是需要手动去操作服务器。 </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>其实完全可以将上面的操作细节都集成到一个 shell 脚本里，通知执行 shell 也能减少很多重复的工作。</p></blockquote>\n<h4 id=\"DevOps的思想\"><a href=\"#DevOps的思想\" class=\"headerlink\" title=\"DevOps的思想\"></a>DevOps的思想</h4><h2 id=\"CI-CD实践-——-前端项目自动化部署\"><a href=\"#CI-CD实践-——-前端项目自动化部署\" class=\"headerlink\" title=\"CI/CD实践 —— 前端项目自动化部署\"></a>CI/CD实践 —— 前端项目自动化部署</h2><h3 id=\"流程架构\"><a href=\"#流程架构\" class=\"headerlink\" title=\"流程架构\"></a>流程架构</h3><h4 id=\"想要达到的效果\"><a href=\"#想要达到的效果\" class=\"headerlink\" title=\"想要达到的效果\"></a>想要达到的效果</h4><h4 id=\"实现的技术链路\"><a href=\"#实现的技术链路\" class=\"headerlink\" title=\"实现的技术链路\"></a>实现的技术链路</h4><h3 id=\"搭建过程\"><a href=\"#搭建过程\" class=\"headerlink\" title=\"搭建过程\"></a>搭建过程</h3><h4 id=\"docker环境的搭建\"><a href=\"#docker环境的搭建\" class=\"headerlink\" title=\"docker环境的搭建\"></a>docker环境的搭建</h4><h4 id=\"安装docker-compose\"><a href=\"#安装docker-compose\" class=\"headerlink\" title=\"安装docker-compose\"></a>安装docker-compose</h4><h4 id=\"编写docker-compose-（拉取nginx、jenkins、node镜像，编写目录数据卷映射）\"><a href=\"#编写docker-compose-（拉取nginx、jenkins、node镜像，编写目录数据卷映射）\" class=\"headerlink\" title=\"编写docker-compose （拉取nginx、jenkins、node镜像，编写目录数据卷映射）\"></a>编写docker-compose （拉取nginx、jenkins、node镜像，编写目录数据卷映射）</h4><h4 id=\"Jenkins基本配置\"><a href=\"#Jenkins基本配置\" class=\"headerlink\" title=\"Jenkins基本配置\"></a>Jenkins基本配置</h4><h3 id=\"新建一个Item\"><a href=\"#新建一个Item\" class=\"headerlink\" title=\"新建一个Item\"></a>新建一个Item</h3><h4 id=\"关联github\"><a href=\"#关联github\" class=\"headerlink\" title=\"关联github\"></a>关联github</h4><h4 id=\"设置构建环境\"><a href=\"#设置构建环境\" class=\"headerlink\" title=\"设置构建环境\"></a>设置构建环境</h4><h4 id=\"编写构建shell\"><a href=\"#编写构建shell\" class=\"headerlink\" title=\"编写构建shell\"></a>编写构建shell</h4><h4 id=\"ssh上传远端\"><a href=\"#ssh上传远端\" class=\"headerlink\" title=\"ssh上传远端\"></a>ssh上传远端</h4><h4 id=\"编写上传成功后的shell\"><a href=\"#编写上传成功后的shell\" class=\"headerlink\" title=\"编写上传成功后的shell\"></a>编写上传成功后的shell</h4><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><h4 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h4>","feature":true,"text":"前端CI/CD实践前言前置知识可以干嘛CI/CD是什么CI/CD（Continuous Intergration/Continuous Delpoy），持续集成/持续部署，或者持续集成/持续交付（Continuous Delivery），是一种在开发阶段引入自动化来频繁交付应用的...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AFCI-CD%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">前端CI&#x2F;CD实践</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">前置知识</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E4%BB%A5%E5%B9%B2%E5%98%9B\"><span class=\"toc-text\">可以干嘛</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CI-CD%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">CI&#x2F;CD是什么</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9E%84%E5%BB%BA-%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">构建&#x2F;部署</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%89%8B%E5%8A%A8%E6%8C%A1\"><span class=\"toc-text\">手动挡</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%8A%A8%E6%8C%A1\"><span class=\"toc-text\">自动挡</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#DevOps%E7%9A%84%E6%80%9D%E6%83%B3\"><span class=\"toc-text\">DevOps的思想</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CI-CD%E5%AE%9E%E8%B7%B5-%E2%80%94%E2%80%94-%E5%89%8D%E7%AB%AF%E9%A1%B9%E7%9B%AE%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">CI&#x2F;CD实践 —— 前端项目自动化部署</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%81%E7%A8%8B%E6%9E%B6%E6%9E%84\"><span class=\"toc-text\">流程架构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%83%B3%E8%A6%81%E8%BE%BE%E5%88%B0%E7%9A%84%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">想要达到的效果</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%8A%80%E6%9C%AF%E9%93%BE%E8%B7%AF\"><span class=\"toc-text\">实现的技术链路</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">搭建过程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#docker%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">docker环境的搭建</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85docker-compose\"><span class=\"toc-text\">安装docker-compose</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99docker-compose-%EF%BC%88%E6%8B%89%E5%8F%96nginx%E3%80%81jenkins%E3%80%81node%E9%95%9C%E5%83%8F%EF%BC%8C%E7%BC%96%E5%86%99%E7%9B%AE%E5%BD%95%E6%95%B0%E6%8D%AE%E5%8D%B7%E6%98%A0%E5%B0%84%EF%BC%89\"><span class=\"toc-text\">编写docker-compose （拉取nginx、jenkins、node镜像，编写目录数据卷映射）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Jenkins%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">Jenkins基本配置</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AAItem\"><span class=\"toc-text\">新建一个Item</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B3%E8%81%94github\"><span class=\"toc-text\">关联github</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E6%9E%84%E5%BB%BA%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">设置构建环境</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E6%9E%84%E5%BB%BAshell\"><span class=\"toc-text\">编写构建shell</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ssh%E4%B8%8A%E4%BC%A0%E8%BF%9C%E7%AB%AF\"><span class=\"toc-text\">ssh上传远端</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E4%B8%8A%E4%BC%A0%E6%88%90%E5%8A%9F%E5%90%8E%E7%9A%84shell\"><span class=\"toc-text\">编写上传成功后的shell</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\"></span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"EVE","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"keep calm, own minds </br>  put thoughts forward","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"如何写好JavaScript代码","uid":"66d5432935a9e114e0c6473f5ec12a37","slug":"如何写好JavaScript代码","date":"2022-01-19T15:20:00.000Z","updated":"2022-01-19T15:22:56.620Z","comments":true,"path":"api/articles/如何写好JavaScript代码.json","keywords":null,"cover":[],"text":"写好JS的三个原则各司其职Web天然具有分层的体系架构，HTML、CSS、JavaScript各自承担着结构、表现和行为的责任，这种鲜明的三层结构就能在一定程度上指导我们设计一个高可用、高可扩展的应用。 网页换肤以一个具备 白天/夜间 模式切换的页面为例，我们先给出基本的HTML...","link":"","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[],"tags":[],"author":{"name":"EVE","slug":"blog-author","avatar":"https://gitee.com/zeng-fanhao/figure-bed/raw/master/images/202201171207395.png","link":"/","description":"keep calm, own minds </br>  put thoughts forward","socials":{"github":"https://github.com/starryeve","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/562570281888488","customs":{}}},"feature":true}}